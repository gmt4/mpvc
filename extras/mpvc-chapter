#!/usr/bin/env sh
#
# @file mpvc-chapter
# @description mpvc chapter helper utils (see mpvc chapter-list instead)
# @author gmt4 <gmt4 at github.com> (c) Copyright 2022 GPLv2+
# @url github.com/gmt4/mpvc
# SPDX-License-Identifier: GPL-2.0-or-later
#

PROGNAME=${0##*/}
PROGVERSION="v1.7"
PROGAUTHOR=gmt4
PROGURL="https://github.com/gmt4/mpvc"

set -euf

# See https://ffmpeg.org/ffmpeg-formats.html#Metadata-1
mpvc_chapter_file()
{
    chaptersdir="$HOME/.config/mpvc/chapters/"
    chaptersfile="$chaptersdir/$(mpvc get path | sed 's/\//-/g; s/ /_/g; s/[&]//')"
    mkdir -p "$chaptersdir"
    echo "$chaptersfile"
}

mpvc_chapter_info()
{
    chaptersfile=${1:-$(mpvc_chapter_file)}

    if [ ! -e "$chaptersfile" ]; then echo "$PROGNAME: Not found $chaptersfile"; return; fi

    #echo "# $chaptersfile"
    awk '
        function cinfo() { printf("%d\t%d\t%s\n", ch++, start, title); }
        BEGIN            { ch=0 }
        /^title=/        { title=$0; sub("^title=", "", title); }
        /^START=/        { start=$0; sub("^START=", "", start);}
        /^\[CHAPTER\]/   { cinfo(); }
        END              { cinfo(); }
    ' "$chaptersfile"
}

# usage: mpvc_chapter_gen < chapterlist.txt with entries format: (HH:MM:SS) title (time can be relative or absolute)
mpvc_chapter_gen()
{
    chaptersfile=${1:-$(mpvc_chapter_file)}
    isabsolute=${2:-1}

    while read -r line
    do
        tpos=$(echo "$line" | awk -v otp="${otpos:-0}" -v isabsolute="$isabsolute" '
            /^[0-9]{1,2}:[0-9]{1,2}(:[0-9]{1,2})?/ {
                tp=$1
                n=split(tp, a, ":")
                if (n == 2) tp = a[1]*60 + a[2]
                if (n == 3) tp = a[1]*60*60 + a[2]*60 + a[3]

                print (isabsolute ? 0 : otp) + tp
            }
        ')
        title=$(echo "$line" | awk '{ sub($1" *", ""); print }')
        mpvc_chapter_add_new "$chaptersfile" "$tpos" "$title"
        otpos=$tpos
    done

    #cat "$chaptersfile"
}

mpvc_chapter_merge() # usage: merge srcfile.opus metadata.txt dstfile.opus
{
    srcfile="${1:-}"
    metafile="${2:-}"
    dstfile="${3:-/tmp/$(basename "$srcfile")}"

    if [ ! -e "$srcfile" ]; then usage; fi

    if [ ! -e "$metafile" ];
    then
        # -map_metadata 0 -map_metadata:s:v 0:s:v -map_metadata:s:a 0:s:a
        ffmpeg -v quiet -i "$srcfile" -f ffmetadata - > "$metafile"
        cat "$(mpvc_chapter_file)" >> "$metafile"
    fi
    ffmpeg -i "$srcfile" -i "$metafile" -map_metadata 1 -codec copy "$dstfile"
}

# usage: mpvc_chapter_add [tpos] [title]
mpvc_chapter_add()
{
    chaptersfile=$1; shift

    tpos=$(mpvc get time-pos)
    tpos=${tpos%%.*}
    mpvc_chapter_add_new "$chaptersfile" "$tpos" "$@"
}

# usage: mpvc_chapter_add_new [title], generates a ffmpeg metadata chapters file
mpvc_chapter_add_new()
{

    chaptersfile=$1; shift
    tpos=$1; shift
    path=$(mpvc get path)
    percentpos=$(mpvc get percent-pos)
    mediatitle=$(mpvc get media-title)

    if [ ! -s "$chaptersfile" ]
    then
        cat > "$chaptersfile" <<EOF
;FFMETADATA1
title=$mediatitle
;path=$path

#percent-pos=0
#[CHAPTER]
#TIMEBASE=1/1
#START=0
#END=$tpos
#title=$@
EOF

    fi

    start_time=$(awk -F'=' 'BEGIN{s=0} /^END=[0-9]+/ {s=$2} END{print s}' "$chaptersfile")
    end_time=$tpos

    if [ "$#" -gt 0 ]
    then
        cat >>"$chaptersfile" <<EOF

#percent-pos=$percentpos
[CHAPTER]
TIMEBASE=1/1
START=$start_time
END=$end_time
title=$@
EOF
    fi

    #cat "$chaptersfile"
}

# usage mpvc_chapter_load chapters.txt ffmetadata chapter-file
mpvc_chapter_load()
{
    track=$(mpvc get playlist-pos)
    tpos=$(mpvc get time-pos)
    mpvc set chapters-file "$(mpvc_chapter_file)"
    mpvc play "$track"
    mpvc delay set time-pos "$tpos"
}

mpvc_chapter_reset()
{
    mpvc set chapters-file ''
}

mpvc_chapter_clear()
{
    track=$(mpvc get playlist-pos)
    tpos=$(mpvc get time-pos)
    mpvc set chapters-file ''
    mpvc play "$track"
    mpvc delay set time-pos "$tpos"
}

mpvc_chapter_list()
{
    ls -ltr "$HOME/.config/mpvc/chapters/"
}

mpvc_chapter_edit()
{
    ${EDITOR:-vi} "$HOME/.config/mpvc/chapters/"
}

usage()
{
    cat <<EOF
usage: $PROGNAME args # @version $PROGVERSION (c) $PROGAUTHOR $PROGURL
 file : Show current ffmetadata chapter-file
 info : Info current ffmetadata chapter-file
 reset: Reset current ffmetadata chapter-file
 load : Load current ffmetadata chapter-file
 add  : Add new chapter to current ffmetadata chapter-file
 gen  : Gen a ffmetadata chapter-file from a < chapterlist.txt
 list : List ffmetadata chapter-files
 merge: Merge ffmetadata chapter-file to audio file
EOF
    exit;
}

main()
{
    if [ $# -lt 1 ]; then usage; fi

    case "$1" in
    file)   shift; mpvc_chapter_file "$@" ;;
    info)   shift; mpvc_chapter_info "$@" ;;
    load)   shift; mpvc_chapter_load "$@" ;;
    clear)  shift; mpvc_chapter_clear "$@" ;;
    add)    shift; mpvc_chapter_add "$@" ;;
    gen)    shift; mpvc_chapter_gen "$@" ;;
    merge)  shift; mpvc_chapter_merge "$@" ;;
    reset)  shift; mpvc_chapter_reset "$@" ;;
    list)   shift; mpvc_chapter_list "$@" ;;
    edit)   shift; mpvc_chapter_edit "$@" ;;
    help)   shift; usage "$@" ;;
    *)      shift; usage "$@" ;;
    esac
}

main "$@"
